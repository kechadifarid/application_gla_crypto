name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1. Récupération du code
    - name: Checkout Code
      uses: actions/checkout@v3

    # 2. Configuration de PHP
    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.4'
        extensions: mbstring, intl, pdo, pgsql
        tools: composer

    # 3. Vérifier la version de PHP
    - name: Verify PHP Version
      run: php --version

    # 4. Lister les fichiers pour diagnostic
    - name: List Files in src and tests
      run: |
        echo "Files in src:"
        ls -la src/
        echo "Files in tests:"
        ls -la tests/

    # 5. Nettoyer le cache Composer et regénérer l'autoloader
    - name: Remove Dependencies and Cache
      run: |
        rm -rf vendor composer.lock
        composer clear-cache
    - name: Install Dependencies
      run: composer install --no-progress --prefer-dist
    - name: Dump Autoload
      run: composer dump-autoload -o

    # 6. Afficher la configuration PSR-4 pour vérifier l'autoload
    - name: Show PSR-4 Autoload Map
      run: cat vendor/composer/autoload_psr4.php

    # 7. Lancer les tests PHPUnit
    - name: Run PHPUnit Tests
      run: vendor/bin/phpunit --filter DatabaseConnectionTest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    # 8. Récupération du code pour déploiement
    - name: Checkout Code
      uses: actions/checkout@v3

    # 9. Déploiement sur le serveur
    - name: Deploy to Server
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SERVER_HOST: ${{ secrets.SERVER_HOST }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
      run: |
        echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
        ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST "cd /path/to/project && git pull && composer install && php artisan migrate"
