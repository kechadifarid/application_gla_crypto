name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Étape 1 : Récupérer le code source
    - name: Checkout Code
      uses: actions/checkout@v3

    # Étape 2 : Mettre à jour les sous-modules Git
    - name: Update Git Submodules
      run: |
        git submodule init
        git submodule update

    # Étape 3 : Configurer PHP
    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, intl, pdo, pgsql, dom, curl
        tools: composer

    # Étape 4 : Nettoyer et réinstaller les dépendances
    - name: Remove Dependencies and Cache
      run: |
        rm -rf vendor composer.lock
        composer clear-cache
    - name: Install Dependencies
      run: composer install --no-progress --prefer-dist

    # Étape 5 : Exécuter les tests PHPUnit
    - name: Run PHPUnit Tests
      run: |
        vendor/bin/phpunit --coverage-clover=coverage.xml || echo "PHPUnit tests failed. Check logs for details."
        cat coverage.xml

    # Étape 6 : Installer et configurer Snyk
    - name: Install Snyk
      run: npm install -g snyk
    - name: Authenticate Snyk
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: snyk auth $SNYK_TOKEN

    # Étape 7 : Lancer l'analyse des dépendances avec Snyk
    - name: Snyk Dependency Test
      run: snyk test --all-projects

    # Étape 8 : Surveiller les dépendances avec Snyk
    - name: Monitor Dependencies with Snyk
      run: snyk monitor
