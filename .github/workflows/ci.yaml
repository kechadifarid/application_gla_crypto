name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DB_HOST: pedago01c.univ-avignon.fr
      DB_USERNAME: uapv2200995
      DB_PASSWORD: xm4Quj
      DB_NAME: etd
      DB_PORT: 5432

    steps:
    # Étape 1 : Récupérer le code source
    - name: Checkout Code
      uses: actions/checkout@v3

    # Étape 2 : Configurer PHP
    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, intl, pdo, pgsql
        tools: composer

    # Étape 3 : Vérifier la connectivité à la base de données
    - name: Test Database Connection
      run: |
        echo "Testing database connection..."
        psql "host=${{ env.DB_HOST }} port=${{ env.DB_PORT }} user=${{ env.DB_USERNAME }} password=${{ env.DB_PASSWORD }} dbname=${{ env.DB_NAME }}" -c '\l'

    # Étape 4 : Configurer Xdebug
    - name: Configure Xdebug
      run: |
        mkdir -p ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d
        echo "xdebug.mode=coverage" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini
        echo "xdebug.start_with_request=no" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini

    # Étape 5 : Exécuter les tests PHPUnit avec couverture
    - name: Run PHPUnit Tests
      env:
        DB_HOST: ${{ env.DB_HOST }}
        DB_USERNAME: ${{ env.DB_USERNAME }}
        DB_PASSWORD: ${{ env.DB_PASSWORD }}
        DB_NAME: ${{ env.DB_NAME }}
      run: vendor/bin/phpunit --coverage-clover=coverage.xml

    # Étape 6 : Analyser avec SonarQube
    - name: SonarQube Analysis
      env:
        SONAR_HOST_URL: http://<IP_SONARQUBE>:9000
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        sonar-scanner \
          -Dsonar.projectKey=my-php-project \
          -Dsonar.php.coverage.reportPaths=coverage.xml \
          -Dsonar.sources=src
